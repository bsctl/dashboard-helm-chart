{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

[Sveltos](https://github.com/projectsveltos) is a Kubernetes add-on controller that simplifies the deployment and management of Kubernetes add-ons and applications across multiple clusters whether on-prem, in the cloud or a multitenant environment.

Sveltos runs in a management cluster. It assists users in programmatically deploying and managing Kubernetes add-ons and applications to any cluster in the fleet, including the management cluster.

This repo contains dashboard helm chart. This is a temporary repo. Goal is to have dashboard part of the Sveltos helm chart

# Installing

```command
git clone https://github.com/projectsveltos/dashboard-helm-chart
cd dashboard-helm-chart
helm -n projectsveltos install dashboard .
```

# Access the dashboard
To access the dashboard, you'll need to expose the dashboard service in the projectsveltos namespace.
Currently, it's configured as a ClusterIP service, which limits access to within the cluster.
To expose it externally, you can either change the service type to LoadBalancer or utilize an Ingress/Gateway API.

Refer to the Sveltos' [documentation](https://projectsveltos.github.io/sveltos/getting_started/install/dashboard/) for more information.

# Customize the installation

There are two methods for specifying overrides of values during Chart installation: `--values` and `--set`.

The `--values` option is the preferred method because it allows you to keep your overrides in a YAML file, rather than specifying them all on the command line.
Create a copy of the YAML file `values.yaml` and add your overrides to it.

Specify your overrides file when you install the Chart:

        helm -n projectsveltos upgrade dashboard . --install --values myvalues.yaml

The values in your overrides file `myvalues.yaml` will override their counterparts in the Chart's values.yaml file.
Any values in `values.yaml` that weren't overridden will keep their defaults.

If you only need to make minor customizations, you can specify them on the command line by using the `--set` option. For example:

        helm -n projectsveltos upgrade dashboard . --install --set dashboard.ingress.enabled=true

Here the values you can override:

{{ template "chart.valuesSection" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}
